{"ast":null,"code":"var _jsxFileName = \"D:\\\\data-processing\\\\data-processing\\\\netflix\\\\src\\\\LogInPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LogoImage from './Images/Netflix.png';\nimport './css/LogInPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_LOGIN_ATTEMPTS = 3;\nconst LogIn = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loginAttempts, setLoginAttempts] = useState(0);\n  useEffect(() => {\n    const storedLoginAttempts = localStorage.getItem('loginAttempts');\n    if (storedLoginAttempts) {\n      setLoginAttempts(parseInt(storedLoginAttempts, 10));\n    }\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setIsLoggedIn(true);\n        setLoginAttempts(0); // Reset login attempts on successful login\n        localStorage.removeItem('loginAttempts'); // Clear stored attempts\n        document.cookie = `loggedIn=true; max-age=3600`; // Set a cookie for 1 hour (adjust as needed)\n        console.log('Login successful:', data.user);\n      } else {\n        setError(data.message || 'Login failed');\n        setLoginAttempts(loginAttempts + 1);\n        if (loginAttempts + 1 === MAX_LOGIN_ATTEMPTS) {\n          // Block account after the maximum allowed attempts\n          console.log('Account blocked!');\n          // You may want to implement further actions like notifying the user or locking the account in the database\n        }\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      setError('Internal Server Error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mainGrid\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: LogoImage,\n      alt: \"Netflix\",\n      id: \"logoImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loggedInInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome, \", email, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userEmail\",\n          children: \"Email address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"userEmail\",\n          name: \"userEmail\",\n          placeholder: \"Input Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userPassword\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"userPassword\",\n          name: \"userPassword\",\n          placeholder: \"Input Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authError\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"FormLink\",\n          href: \"/forgot-password\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Log-In\",\n          className: \"loginButton\",\n          name: \"LogInButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(LogIn, \"G+zBd14RzZedSHM32A7hOiI+8sQ=\");\n_c = LogIn;\nexport default LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useState","useEffect","LogoImage","jsxDEV","_jsxDEV","MAX_LOGIN_ATTEMPTS","LogIn","_s","email","setEmail","password","setPassword","error","setError","isLoggedIn","setIsLoggedIn","loginAttempts","setLoginAttempts","storedLoginAttempts","localStorage","getItem","parseInt","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","removeItem","document","cookie","console","log","user","message","id","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","name","placeholder","value","onChange","target","href","_c","$RefreshReg$"],"sources":["D:/data-processing/data-processing/netflix/src/LogInPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport LogoImage from './Images/Netflix.png';\r\nimport './css/LogInPage.css';\r\n\r\nconst MAX_LOGIN_ATTEMPTS = 3;\r\n\r\nconst LogIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [loginAttempts, setLoginAttempts] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const storedLoginAttempts = localStorage.getItem('loginAttempts');\r\n    if (storedLoginAttempts) {\r\n      setLoginAttempts(parseInt(storedLoginAttempts, 10));\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setIsLoggedIn(true);\r\n        setLoginAttempts(0); // Reset login attempts on successful login\r\n        localStorage.removeItem('loginAttempts'); // Clear stored attempts\r\n        document.cookie = `loggedIn=true; max-age=3600`; // Set a cookie for 1 hour (adjust as needed)\r\n        console.log('Login successful:', data.user);\r\n      } else {\r\n        setError(data.message || 'Login failed');\r\n        setLoginAttempts(loginAttempts + 1);\r\n\r\n        if (loginAttempts + 1 === MAX_LOGIN_ATTEMPTS) {\r\n          // Block account after the maximum allowed attempts\r\n          console.log('Account blocked!');\r\n          // You may want to implement further actions like notifying the user or locking the account in the database\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      setError('Internal Server Error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='mainGrid'>\r\n      <img src={LogoImage} alt=\"Netflix\" id=\"logoImage\" />\r\n      <div className=\"loginContainer\">\r\n        {isLoggedIn ? (\r\n          <div className=\"loggedInInfo\">\r\n            <p>Welcome, {email}!</p>\r\n            {/* Add additional information or navigation for logged-in users */}\r\n          </div>\r\n        ) : (\r\n          <form className=\"loginForm\" onSubmit={handleSubmit}>\r\n            <label htmlFor='userEmail'>Email address:</label>\r\n            <input\r\n              type=\"email\"\r\n              id='userEmail'\r\n              name='userEmail'\r\n              placeholder='Input Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n\r\n            <label htmlFor=\"userPassword\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"userPassword\"\r\n              name=\"userPassword\"\r\n              placeholder='Input Password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n\r\n            {error && <div className=\"authError\">{error}</div>}\r\n\r\n          \r\n            <a id=\"FormLink\" href=\"/forgot-password\">Forgot password?</a>\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Log-In\"\r\n              className=\"loginButton\"\r\n              name='LogInButton'\r\n            />\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}